<?xml version="1.0"?>
<doc>
    <assembly>
        <name>5-concatenate</name>
    </assembly>
    <members>
        <member name="T:Program">
            <summary>
            Entry point for the program.
            </summary>
        </member>
        <member name="M:Program.Main">
            <summary>
            Demonstrates usage of the Queue class.
            </summary>
        </member>
        <member name="T:Queue`1">
            <summary>
            Queue of a specified type.
            </summary>
            <typeparam name="T">The type of elements in the queue.</typeparam>
        </member>
        <member name="T:Queue`1.Node">
            <summary>
            Node class for the elements in the queue.
            </summary>
        </member>
        <member name="F:Queue`1.Node.Value">
            <summary>
            Value contained in the node.
            </summary>
        </member>
        <member name="F:Queue`1.Node.Next">
            <summary>
            Reference to the next node in the queue.
            </summary>
        </member>
        <member name="M:Queue`1.Node.#ctor(`0)">
            <summary>
            Constructs a new node with a specified value.
            </summary>
            <param name="value">The value to store in the node.</param>
        </member>
        <member name="F:Queue`1.head">
            <summary>
            Head of the queue.
            </summary>
        </member>
        <member name="F:Queue`1.tail">
            <summary>
            Tail of the queue.
            </summary>
        </member>
        <member name="F:Queue`1.count">
            <summary>
            Number of elements in the queue.
            </summary>
        </member>
        <member name="M:Queue`1.#ctor">
            <summary>
            Constructs an empty queue.
            </summary>
        </member>
        <member name="M:Queue`1.Enqueue(`0)">
            <summary>
            Adds an element to the end of the queue.
            </summary>
            <param name="value">The value to enqueue.</param>
        </member>
        <member name="M:Queue`1.Dequeue">
            <summary>
            Removes and returns the element at the beginning of the queue.
            </summary>
            <returns>The element removed from the beginning of the queue, or the default value of type T if the queue is empty.</returns>
        </member>
        <member name="M:Queue`1.Peek">
            <summary>
            Returns the element at the beginning of the queue without removing it.
            </summary>
            <returns>The element at the beginning of the queue, or the default value of type T if the queue is empty.</returns>
        </member>
        <member name="M:Queue`1.Print">
            <summary>
            Prints all elements in the queue.
            </summary>
        </member>
        <member name="M:Queue`1.Concatenate">
            <summary>
            Concatenates all elements in the queue if the queue is of type string or char.
            </summary>
            <returns>A concatenated string of all elements, or null if the queue is empty or not of type string or char.</returns>
        </member>
        <member name="M:Queue`1.CheckType">
            <summary>
            Returns the type of elements in the queue.
            </summary>
            <returns>The type of elements in the queue.</returns>
        </member>
        <member name="M:Queue`1.Count">
            <summary>
            Returns the number of elements in the queue.
            </summary>
            <returns>The number of elements in the queue.</returns>
        </member>
    </members>
</doc>
